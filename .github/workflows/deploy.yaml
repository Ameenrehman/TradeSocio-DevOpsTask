name: OpenShift Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'Api-APP/**'
      - 'k8s/**'
      - 'api-app-chart/**'
    
  workflow_dispatch:
env:
  IMAGE_TAG: api-app-${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('Api-APP/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    # Cache Docker buildx layers
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install OpenShift CLI
      run: |
        curl -LO "https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz"
        tar -xzf oc.tar.gz
        sudo mv oc /usr/local/bin/oc
        oc version 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./Api-APP
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/myecr-ameen1:${{ env.IMAGE_TAG }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
      #run: docker build -t ${{ steps.login-ecr.outputs.registry }}/myecr-ameen1:$IMAGE_TAG ./Api-APP
    - name: Install container-structure-test binary
      run: |
        curl -LO https://storage.googleapis.com/container-structure-test/latest/container-structure-test-linux-amd64
        chmod +x container-structure-test-linux-amd64
        sudo mv container-structure-test-linux-amd64 /usr/local/bin/container-structure-test

    - name: Run Container Structure Tests
      run: |
        container-structure-test test \
          --image ${{ steps.login-ecr.outputs.registry }}/myecr-ameen1:${{ env.IMAGE_TAG }} \
          --config Api-APP/container-structure-test.yaml

    #- name: Push Docker image to ECR
    #  run: docker push ${{ steps.login-ecr.outputs.registry }}/myecr-ameen1:$IMAGE_TAG
   
    - name: Log in to OpenShift
      uses: redhat-actions/oc-login@v1
      with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER_URL }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true
          namespace: ameen2607-dev

    - name: Create imagePullSecret for ECR
      run: |
       oc create secret docker-registry ecr-secret \
          --docker-server=593793064016.dkr.ecr.us-east-1.amazonaws.com \
          --docker-username=AWS \
          --docker-password=$(aws ecr get-login-password --region us-east-1) \
          --docker-email=ameen2607.com \
          --namespace=ameen2607-dev \
          --dry-run=client -o yaml | kubectl apply -f -

       oc secrets link default ecr-secret --for=pull || true
    - name: Install Helm
      run: |
          curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
        
    #- name: Install Gatekeeper via Helm in dev namespace
    #  run: |
    #    helm repo add gatekeeper https://open-policy-agent.github.io/gatekeeper/charts
    #    helm repo update
    #    helm upgrade --install gatekeeper gatekeeper/gatekeeper \
    #        --namespace ameen2607-dev \
    #        --create-namespace \
    #        --set replicas=1 \
    #        --set controllerManager.webhook.port=8443 \
    #        --set audit.enabled=false \
    #        --set validatingWebhookFailurePolicy=Ignore

    - name: ⚠️ Skipping Gatekeeper Install - Requires Cluster Admin
      run: echo "Gatekeeper CRD install requires cluster-admin permissions. Skipping in OpenShift Sandbox."   

    - name: Deploy via Helm
      run: |
         helm upgrade --install api-app ./api-app-chart \
          --namespace ameen2607-dev \
          --set image.repository=593793064016.dkr.ecr.us-east-1.amazonaws.com/myecr-ameen1 \
          --set image.tag=${{ env.IMAGE_TAG }}
    
    #this if you want to deploy using manifest instead of helm
    #- name: Apply deployment YAML
    #  run: |
    #      IMAGE="${{ steps.login-ecr.outputs.registry }}/myecr-ameen1:$IMAGE_TAG"
    #      sed "s|__IMAGE__|$IMAGE|g" k8s/deployment.yaml > k8s/deployment-patched.yaml
    #      oc apply -f k8s/deployment-patched.yaml
        #run: oc apply -f k8s/node-backend-app1/deployment.yml

    #- name: Apply service YAML
    #  run: oc apply -f k8s/service.yaml

    #- name: Apply route YAML
    #  run: oc apply -f k8s/route.yaml

    - name: Show app URL
      run: |
        echo "App route:"
        oc get route api-app-route -o jsonpath='{.spec.host}{"\n"}'

